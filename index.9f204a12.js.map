{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAiB,SAAS,aAAa,CAAC,eACxC,EAAiB,SAAS,aAAa,CAAC,WACxC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAc,SAAS,aAAa,CAAC,iBAErC,EAAe,SAAC,CAAA,CAAK,CAA3B,EACE,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,EAAM,EAAM,CAAA,EAAK,EACtD,EAMM,EAAsB,SAAC,CAA7B,EAGE,IAAK,IAFC,EAAc,EAAG,GAEd,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAM,EAAO,CAAU,CAAC,EAAE,CAAC,EAAE,AAE7B,CAAA,CAAU,CAAC,EAAE,CAAC,EAAE,CAAG,CAAU,CAAC,EAAE,CAAC,EAAE,CACnC,CAAU,CAAC,EAAE,CAAC,EAAE,CAAG,CACrB,CAGF,OAAO,CACT,EAEM,EAAoB,WACxB,IAAM,EAAiB,EAAE,CACnB,EAAO,SAAS,gBAAgB,CAAC,cAElC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACG,EAAc,EAAE,CAChB,EAAQ,EAAI,gBAAgB,CAAC,eAE9B,EAA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar gameScoreBoard = document.querySelector(\".game-score\");\nvar controlsButton = document.querySelector(\".button\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar getRandomInt = function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nvar initMatrix = function(size) {\n    return _to_consumable_array(Array(size)).map(function() {\n        return _to_consumable_array(Array(size)).fill(0);\n    });\n};\nvar getTransposedMatrix = function(matrix) {\n    var transposed = _to_consumable_array(matrix);\n    for(var i = 0; i < transposed.length; i++)for(var j = 0; j < i; j++){\n        var temp = transposed[i][j];\n        transposed[i][j] = transposed[j][i];\n        transposed[j][i] = temp;\n    }\n    return transposed;\n};\nvar getElementsMatrix = function() {\n    var elementsMatrix = [];\n    var rows = document.querySelectorAll(\".field-row\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            var elementsRow = [];\n            var cells = row.querySelectorAll(\".field-cell\");\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                for(var _iterator1 = cells[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var cell = _step1.value;\n                    elementsRow.push(cell);\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            elementsMatrix.push(elementsRow);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return elementsMatrix;\n};\nvar startGame = function() {\n    var SIZE = 4;\n    var NUMBER_TO_WIN = 2048;\n    var elements = getElementsMatrix();\n    var cells = initMatrix(SIZE);\n    var gameScore = 0;\n    var renderNumber = function(num, row, cell) {\n        elements[row][cell].className = \"field-cell field-cell--\".concat(num);\n        elements[row][cell].textContent = num;\n    };\n    var renderNumbers = function() {\n        for(var i = 0; i < elements.length; i++)for(var j = 0; j < elements.length; j++){\n            if (cells[i][j]) {\n                renderNumber(cells[i][j], i, j);\n                continue;\n            }\n            elements[i][j].className = \"field-cell\";\n            elements[i][j].textContent = \"\";\n        }\n    };\n    var addNewNumbers = function() {\n        while(true){\n            var row = getRandomInt(0, SIZE - 1);\n            var cell = getRandomInt(0, SIZE - 1);\n            if (cells[row][cell] === 0) {\n                var newNumber = Math.random() < 0.1 ? 4 : 2;\n                cells[row][cell] = newNumber;\n                renderNumber(newNumber, row, cell);\n                return;\n            }\n        }\n    };\n    var getMergedLine = function(line) {\n        var merged = line.filter(function(el) {\n            return el;\n        });\n        for(var i = 0; i < merged.length - 1; i++)if (merged[i] === merged[i + 1]) {\n            merged[i] = 2 * merged[i];\n            merged.splice(i + 1, 1);\n            gameScore += merged[i];\n        }\n        return _to_consumable_array(merged).concat(_to_consumable_array(Array(SIZE - merged.length).fill(0)));\n    };\n    var mergeLeft = function() {\n        for(var i = 0; i < SIZE; i++){\n            var line = cells[i];\n            cells[i] = getMergedLine(line);\n        }\n    };\n    var mergeRight = function() {\n        for(var i = 0; i < SIZE; i++){\n            var line = cells[i].reverse();\n            cells[i] = getMergedLine(line).reverse();\n        }\n    };\n    var mergeUp = function() {\n        var transposedCells = getTransposedMatrix(cells);\n        for(var i = 0; i < SIZE; i++){\n            var line = transposedCells[i];\n            transposedCells[i] = getMergedLine(line);\n        }\n        cells = getTransposedMatrix(transposedCells);\n    };\n    var mergeDown = function() {\n        var transposedCells = getTransposedMatrix(cells);\n        for(var i = 0; i < SIZE; i++){\n            var line = transposedCells[i].reverse();\n            transposedCells[i] = getMergedLine(line).reverse();\n        }\n        cells = getTransposedMatrix(transposedCells);\n    };\n    var isWon = function() {\n        return cells.flat().some(function(el) {\n            return el === NUMBER_TO_WIN;\n        });\n    };\n    var hasEmptyCells = function() {\n        return cells.flat().some(function(el) {\n            return !el;\n        });\n    };\n    var canMerged = function() {\n        for(var i = 0; i < SIZE; i++)for(var j = 0; j < SIZE; j++){\n            if (j + 1 < SIZE && cells[i][j] === cells[i][j + 1]) return true;\n            if (i + 1 < SIZE && cells[i][j] === cells[i + 1][j]) return true;\n        }\n        return false;\n    };\n    var isLose = function() {\n        return !hasEmptyCells() && !canMerged();\n    };\n    var keydownEvent = function(e) {\n        var stateBefore = JSON.stringify(cells);\n        switch(e.key){\n            case \"ArrowLeft\":\n                mergeLeft();\n                break;\n            case \"ArrowRight\":\n                mergeRight();\n                break;\n            case \"ArrowUp\":\n                mergeUp();\n                break;\n            case \"ArrowDown\":\n                mergeDown();\n                break;\n        }\n        var stateAfter = JSON.stringify(cells);\n        if (stateBefore !== stateAfter) {\n            renderNumbers();\n            addNewNumbers();\n            gameScoreBoard.textContent = gameScore;\n        }\n        if (isWon()) messageWin.classList.remove(\"hidden\");\n        if (isLose()) {\n            messageLose.classList.remove(\"hidden\");\n            document.removeEventListener(\"keydown\", keydownEvent);\n        }\n    };\n    renderNumbers();\n    for(var i = 0; i < 2; i++)addNewNumbers();\n    document.addEventListener(\"keydown\", keydownEvent);\n};\nvar app = function() {\n    controlsButton.addEventListener(\"click\", function(e) {\n        e.target.classList.remove(\"start\");\n        e.target.classList.add(\"restart\");\n        e.target.textContent = \"Restart\";\n        messageStart.classList.add(\"hidden\");\n        messageLose.classList.add(\"hidden\");\n        messageWin.classList.add(\"hidden\");\n        startGame();\n    });\n};\napp();\n\n//# sourceMappingURL=index.9f204a12.js.map\n","\"use strict\";\n\nconst gameScoreBoard = document.querySelector(\".game-score\");\nconst controlsButton = document.querySelector(\".button\");\nconst messageStart = document.querySelector(\".message-start\");\nconst messageWin = document.querySelector(\".message-win\");\nconst messageLose = document.querySelector(\".message-lose\");\n\nconst getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst initMatrix = (size) => {\n  return [...Array(size)].map(() => [...Array(size)].fill(0));\n};\n\nconst getTransposedMatrix = (matrix) => {\n  const transposed = [...matrix];\n\n  for (let i = 0; i < transposed.length; i++) {\n    for (let j = 0; j < i; j++) {\n      const temp = transposed[i][j];\n\n      transposed[i][j] = transposed[j][i];\n      transposed[j][i] = temp;\n    }\n  }\n\n  return transposed;\n};\n\nconst getElementsMatrix = () => {\n  const elementsMatrix = [];\n  const rows = document.querySelectorAll(\".field-row\");\n\n  for (const row of rows) {\n    const elementsRow = [];\n    const cells = row.querySelectorAll(\".field-cell\");\n\n    for (const cell of cells) {\n      elementsRow.push(cell);\n    }\n\n    elementsMatrix.push(elementsRow);\n  }\n\n  return elementsMatrix;\n};\n\nconst startGame = () => {\n  const SIZE = 4;\n  const NUMBER_TO_WIN = 2048;\n  const elements = getElementsMatrix();\n  let cells = initMatrix(SIZE);\n  let gameScore = 0;\n\n  const renderNumber = (num, row, cell) => {\n    elements[row][cell].className = `field-cell field-cell--${num}`;\n    elements[row][cell].textContent = num;\n  };\n\n  const renderNumbers = () => {\n    for (let i = 0; i < elements.length; i++) {\n      for (let j = 0; j < elements.length; j++) {\n        if (cells[i][j]) {\n          renderNumber(cells[i][j], i, j);\n          continue;\n        }\n\n        elements[i][j].className = \"field-cell\";\n        elements[i][j].textContent = \"\";\n      }\n    }\n  };\n\n  const addNewNumbers = () => {\n    while (true) {\n      const row = getRandomInt(0, SIZE - 1);\n      const cell = getRandomInt(0, SIZE - 1);\n\n      if (cells[row][cell] === 0) {\n        const newNumber = Math.random() < 0.1 ? 4 : 2;\n\n        cells[row][cell] = newNumber;\n        renderNumber(newNumber, row, cell);\n\n        return;\n      }\n    }\n  };\n\n  const getMergedLine = (line) => {\n    const merged = line.filter((el) => el);\n\n    for (let i = 0; i < merged.length - 1; i++) {\n      if (merged[i] === merged[i + 1]) {\n        merged[i] = 2 * merged[i];\n        merged.splice(i + 1, 1);\n        gameScore += merged[i];\n      }\n    }\n\n    return [...merged, ...Array(SIZE - merged.length).fill(0)];\n  };\n\n  const mergeLeft = () => {\n    for (let i = 0; i < SIZE; i++) {\n      const line = cells[i];\n\n      cells[i] = getMergedLine(line);\n    }\n  };\n\n  const mergeRight = () => {\n    for (let i = 0; i < SIZE; i++) {\n      const line = cells[i].reverse();\n\n      cells[i] = getMergedLine(line).reverse();\n    }\n  };\n\n  const mergeUp = () => {\n    const transposedCells = getTransposedMatrix(cells);\n\n    for (let i = 0; i < SIZE; i++) {\n      const line = transposedCells[i];\n\n      transposedCells[i] = getMergedLine(line);\n    }\n\n    cells = getTransposedMatrix(transposedCells);\n  };\n\n  const mergeDown = () => {\n    const transposedCells = getTransposedMatrix(cells);\n\n    for (let i = 0; i < SIZE; i++) {\n      const line = transposedCells[i].reverse();\n\n      transposedCells[i] = getMergedLine(line).reverse();\n    }\n\n    cells = getTransposedMatrix(transposedCells);\n  };\n\n  const isWon = () => {\n    return cells.flat().some((el) => el === NUMBER_TO_WIN);\n  };\n\n  const hasEmptyCells = () => cells.flat().some((el) => !el);\n\n  const canMerged = () => {\n    for (let i = 0; i < SIZE; i++) {\n      for (let j = 0; j < SIZE; j++) {\n        if (j + 1 < SIZE && cells[i][j] === cells[i][j + 1]) {\n          return true;\n        }\n\n        if (i + 1 < SIZE && cells[i][j] === cells[i + 1][j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  const isLose = () => {\n    return !hasEmptyCells() && !canMerged();\n  };\n\n  const keydownEvent = (e) => {\n    const stateBefore = JSON.stringify(cells);\n\n    switch (e.key) {\n      case \"ArrowLeft\":\n        mergeLeft();\n        break;\n      case \"ArrowRight\":\n        mergeRight();\n        break;\n      case \"ArrowUp\":\n        mergeUp();\n        break;\n      case \"ArrowDown\":\n        mergeDown();\n        break;\n    }\n\n    const stateAfter = JSON.stringify(cells);\n\n    if (stateBefore !== stateAfter) {\n      renderNumbers();\n      addNewNumbers();\n      gameScoreBoard.textContent = gameScore;\n    }\n\n    if (isWon()) {\n      messageWin.classList.remove(\"hidden\");\n    }\n\n    if (isLose()) {\n      messageLose.classList.remove(\"hidden\");\n      document.removeEventListener(\"keydown\", keydownEvent);\n    }\n  };\n\n  renderNumbers();\n\n  for (let i = 0; i < 2; i++) {\n    addNewNumbers();\n  }\n\n  document.addEventListener(\"keydown\", keydownEvent);\n};\n\nconst app = () => {\n  controlsButton.addEventListener(\"click\", (e) => {\n    e.target.classList.remove(\"start\");\n    e.target.classList.add(\"restart\");\n    e.target.textContent = \"Restart\";\n\n    messageStart.classList.add(\"hidden\");\n    messageLose.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n\n    startGame();\n  });\n};\n\napp();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","gameScoreBoard","document","querySelector","controlsButton","messageStart","messageWin","messageLose","getRandomInt","min","max","Math","floor","random","getTransposedMatrix","matrix","transposed","j","temp","getElementsMatrix","elementsMatrix","rows","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","row","value","elementsRow","cells","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","cell","push","err","return","startGame","elements","map","fill","gameScore","renderNumber","num","className","concat","textContent","renderNumbers","addNewNumbers","SIZE","newNumber","getMergedLine","line","merged","filter","el","splice","mergeLeft","mergeRight","reverse","mergeUp","transposedCells","mergeDown","canMerged","keydownEvent","e","stateBefore","JSON","stringify","key","flat","some","classList","remove","removeEventListener","addEventListener","target","add"],"version":3,"file":"index.9f204a12.js.map"}